using attestant.DataStructures;

namespace attestant.Utilities;


/// <summary>
///    Utility class that offers functionality to operate on phonemes.
/// </summary>
public static class Phoneme
{
    /// <summary>
    ///     Converts the given phoneme-string to a single replacement-character.
    /// </summary>
    public static readonly Table<string, char> Characterization = new( // ʲ
            ("ε̄", 'Ⅰ'),
            ("ɔ̄", 'Ⅱ'),
            ("m̥", 'Ⅲ'),
            ("n̥", 'Ⅳ'),
            ("r̥", 'Ⅴ'),
            ("ŋ̊", 'Ⅵ'),
            ("xʷ", 'Ⅶ'),
            ("ɣʷ", 'Ⅷ'),
            ("kʷ", 'Ⅸ'),
            ("gʷ", 'Ⅹ'),
            ("pʲ", 'ᚠ'),
            ("bʲ", 'ᚢ'),
            ("mʲ", 'ᚦ'),
            ("ɸʲ", 'ᚨ'),
            ("βʲ", 'ᚱ'),
            ("μʲ", 'ᚲ'),
            ("fʲ", 'ᚷ'),
            ("tʲ", 'ᚹ'),
            ("dʲ", 'ᚺ'),
            ("nʲ", 'ᚾ'),
            ("rʲ", 'ᛁ'),
            ("θʲ", 'ᛃ'),
            ("ðʲ", 'ᛇ'),
            ("sʲ", 'ᛈ'),
            ("lʲ", 'ᛉ'),
            ("kʲ", 'ᛊ'),
            ("gʲ", 'ᛏ'),
            ("ŋʲ", 'ᛒ'),
            ("xʲ", 'ᛖ'),
            ("ɣʲ", 'ᛗ'),
            ("kʷʲ", 'ᛚ'),
            ("gʷʲ", 'ᛜ'),
            ("xʷʲ", 'ᛞ'),
            ("ɣʷʲ", 'ᛟ'),
            ("wʲ", 'ᚡ')
        );

    /// <summary>
    ///     Maps the given phoneme to a binary embedding using phonetic features.
    /// </summary>
    public static readonly Table<string, long> Embedding = new(
        // Examples of entries:
        ("p", 0b_1011_0000_0001_0000_0000_0000_0000_0110_01),
        ("b", 0b_1101_0000_0001_0000_0000_0000_0000_0110_01),
        ("m", 0b_1101_0000_0000_1000_0000_0000_0000_0110_01),
        ("m̥", 0b_1011_0000_0000_1000_0000_0000_0000_0110_01),
        ("ɸ", 0b_1011_0000_0000_0100_0000_0000_0000_0110_01),
        ("β", 0b_1101_0000_0000_0100_0000_0000_0000_0110_01),
        ("μ", 0b_1101_0000_0000_1100_0000_0000_0000_0110_01),
        ("f", 0b_1010_1000_0000_0100_0000_0000_0000_0110_01),
        ("v", 0b_1100_1000_0000_0100_0000_0000_0000_0110_01),
        ("t", 0b_1010_0110_0001_0000_0000_0000_0000_0110_01),
        ("d", 0b_1100_0110_0001_0000_0000_0000_0000_0110_01),
        ("n", 0b_1100_0110_0000_1000_0000_0000_0000_0110_01),
        ("n̥", 0b_1010_0110_0000_1000_0000_0000_0000_0110_01),
        ("r", 0b_1100_0110_0000_0000_1000_0000_0000_0110_01),
        ("r̥", 0b_1010_0110_0000_0000_1000_0000_0000_0110_01),
        ("θ", 0b_1010_0100_0000_0100_0000_0000_0000_0110_01),
        ("ð", 0b_1100_0100_0000_0100_0000_0000_0000_0110_01),
        ("s", 0b_1010_0010_0000_0100_0000_0000_0000_0110_01),
        ("z", 0b_1100_0010_0000_0100_0000_0000_0000_0110_01),
        ("l", 0b_1100_0110_0000_0011_1000_0000_0000_0110_01),
        ("ɬ", 0b_1100_0110_0000_0101_1000_0000_0000_0110_01),
        ("j", 0b_1100_0001_0000_0010_0000_0000_0000_0110_01),
        ("k", 0b_1010_0000_1001_0000_0000_0000_0000_0110_01),
        ("g", 0b_1100_0000_1001_0000_0000_0000_0000_0110_01),
        ("ŋ", 0b_1100_0000_1000_1000_0000_0000_0000_0110_01),
        ("ŋ̊", 0b_1010_0000_1000_1000_0000_0000_0000_0110_01),
        ("x", 0b_1010_0000_1000_0100_0000_0000_0000_0110_01),
        ("ɣ", 0b_1100_0000_1000_0100_0000_0000_0000_0110_01),
        ("h", 0b_1010_0000_0100_0100_0000_0000_0000_0110_01),
        ("kʷ", 0b_1010_0000_1001_0000_0000_0000_0000_1010_01),
        ("gʷ", 0b_1100_0000_1001_0000_0000_0000_0000_1010_01),
        ("w", 0b_1100_0000_0010_0010_0000_0000_0000_1010_01),
        ("i", 0b_0100_0000_0000_0000_0110_0100_0000_0110_01),
        ("y", 0b_0100_0000_0000_0000_0110_0100_0000_1010_01),
        ("ɨ", 0b_0100_0000_0000_0000_0101_0100_0000_0110_01),
        ("ʉ", 0b_0100_0000_0000_0000_0101_0100_0000_1010_01),
        ("u", 0b_0100_0000_0000_0000_0100_1100_0000_1010_01),
        ("e", 0b_0100_0000_0000_0000_0110_0001_0000_0110_01),
        ("ø", 0b_0100_0000_0000_0000_0110_0001_0000_1010_01),
        ("o", 0b_0100_0000_0000_0000_0100_1001_0000_1010_01),
        ("ɛ", 0b_0100_0000_0000_0000_0110_0000_0100_0110_01),
        ("ɔ", 0b_0100_0000_0000_0000_0100_1000_0100_1010_01),
        ("æ", 0b_0100_0000_0000_0000_0110_0000_0010_0110_01),
        ("a", 0b_0100_0000_0000_0000_0110_0000_0001_0110_01),
        ("ɑ", 0b_0100_0000_0000_0000_0100_1000_0001_0110_01),
        ("ə", 0b_0100_0000_0000_0000_0101_0000_1000_0110_01),
        ("ī", 0b_0100_0000_0000_0000_0110_0100_0000_0101_01),
        ("ȳ", 0b_0100_0000_0000_0000_0110_0100_0000_1001_01),
        ("ū", 0b_0100_0000_0000_0000_0100_1100_0000_1001_01),
        ("ē", 0b_0100_0000_0000_0000_0110_0001_0000_0101_01),
        ("ō", 0b_0100_0000_0000_0000_0100_1001_0000_1001_01),
        ("ε̄", 0b_0100_0000_0000_0000_0110_0000_0100_0101_01),
        ("ɔ̄", 0b_0100_0000_0000_0000_0100_1000_0100_1001_01),
        ("ǣ", 0b_0100_0000_0000_0000_0110_0000_0010_0101_01),
        ("ā", 0b_0100_0000_0000_0000_0110_0000_0001_0101_01),
        ("pʲ", 0b_1011_0000_0001_0000_0000_0000_0000_0110_10),
        ("bʲ", 0b_1101_0000_0001_0000_0000_0000_0000_0110_10),
        ("mʲ", 0b_1101_0000_0000_1000_0000_0000_0000_0110_10),
        ("ɸʲ", 0b_1011_0000_0000_0100_0000_0000_0000_0110_10),
        ("βʲ", 0b_1101_0000_0000_0100_0000_0000_0000_0110_10),
        ("μʲ", 0b_1101_0000_0000_1100_0000_0000_0000_0110_10),
        ("fʲ", 0b_1010_1000_0000_0100_0000_0000_0000_0110_10),
        ("tʲ", 0b_1010_0110_0001_0000_0000_0000_0000_0110_10),
        ("dʲ", 0b_1100_0110_0001_0000_0000_0000_0000_0110_10),
        ("nʲ", 0b_1100_0110_0000_1000_0000_0000_0000_0110_10),
        ("rʲ", 0b_1100_0110_0000_0000_1000_0000_0000_0110_10),
        ("θʲ", 0b_1010_0100_0000_0100_0000_0000_0000_0110_10),
        ("ðʲ", 0b_1100_0100_0000_0100_0000_0000_0000_0110_10),
        ("sʲ", 0b_1010_0010_0000_0100_0000_0000_0000_0110_10),
        ("lʲ", 0b_1100_0110_0000_0011_1000_0000_0000_0110_10),
        ("kʲ", 0b_1010_0000_1001_0000_0000_0000_0000_0110_10),
        ("gʲ", 0b_1100_0000_1001_0000_0000_0000_0000_0110_10),
        ("ŋʲ", 0b_1100_0000_1000_1000_0000_0000_0000_0110_10),
        ("xʲ", 0b_1010_0000_1000_0100_0000_0000_0000_0110_10),
        ("ɣʲ", 0b_1100_0000_1000_0100_0000_0000_0000_0110_10),
        ("kʷʲ", 0b_1010_0000_1001_0000_0000_0000_0000_1010_10),
        ("gʷʲ", 0b_1100_0000_1001_0000_0000_0000_0000_1010_10),
        ("wʲ", 0b_1100_0000_0010_0010_0000_0000_0000_1010_10),
        ("ʲ", 0b_0000_0000_0000_0000_0000_0000_0000_0000_00) // For aaahhh
    );
}